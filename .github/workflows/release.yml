name: Release

on:
  push:
    branches:
      - rc-v*
      - release/*
    tags: ["*"]

concurrency:
  group: release

jobs:
  release:
    runs-on: macos-latest

    environment:
      name: ${{ startsWith(github.event.ref, 'refs/tags/') && 'main' || 'internal' }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Setup Linux build dependencies
        run: |
          brew update
          brew install rpm squashfs
          sudo gem install fpm
          export USE_SYSTEM_FPM="true"
      - name: Copy builder config
        shell: bash
        run: |
          sh scripts/download-codesigner.sh

          if [[ "${{ startsWith(github.event.ref, 'refs/tags/') }}" != true ]]
          then
            timestamp=$(date +%s)
            jq --arg version "0.0.$timestamp" '.version = $version' package.json > tmp.$$.json && mv tmp.$$.json package.json
            jq --arg suffix " Internal" '.productName += $suffix' package.json > tmp.$$.json && mv tmp.$$.json package.json
            mv ./signing/sandbox_code_sign_tool.properties ./tmp/codesign/conf/code_sign_tool.properties
          fi

      - name: Cache electron-gyp
        uses: actions/cache@v2
        with:
          path: ~/.electron-gyp
          key: ${{ runner.os }}-electron-gyp-${{ hashFiles('**/yarn.lock') }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Install
        shell: bash
        run: yarn

      - name: release
        shell: bash
        run: |
          if [[ "${{ startsWith(github.event.ref, 'refs/tags/') }}" == true ]]
          then
            yarn run release-main
          else
            yarn run release-internal
          fi
          rm -R ./dist/*-unpacked
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ESIGNER_CREDENTIAL_ID: ${{ secrets.ESIGNER_CREDENTIAL_ID }}
          ESIGNER_USERNAME: ${{ secrets.ESIGNER_USERNAME }}
          ESIGNER_PASSWORD: ${{ secrets.ESIGNER_PASSWORD }}
          ESIGNER_TOTP_SECRET: ${{ secrets.ESIGNER_TOTP_SECRET }}

      - uses: actions/upload-artifact@v3
        with:
          path: dist
          name: Dist
          retention-days: 3
          if-no-files-found: error
